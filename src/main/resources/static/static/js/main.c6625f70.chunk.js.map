{"version":3,"sources":["common/LoggingDialogs.jsx","common/Search.jsx","common/CardsTest.jsx","BlogPosts.js","common/NewBlogPost.jsx","common/KebabMenu.jsx","App.js","serviceWorker.js","index.js"],"names":["LoggingDialogs","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","show","setState","hide","logIn","setLoginStatus","username","React","createRef","password","actions","push","react_default","a","createElement","es","flat","secondary","swapTheming","onClick","primary","id","onHide","title","placeholder","ref","label","type","PureComponent","Search","titles","data","map","item","lineDirection","leftIcon","className","filter","Autocomplete","caseInsensitiveFilter","onAutocomplete","onChange","CardsTest","like","disable","doActionByRel","likes","postDate","date","Date","time","day","getDate","monthIndex","getMonth","year","getFullYear","getHours","getMinutes","getComments","isLoading","then","comments","content","setComment","value","newComment","postComment","obj","text","textField","current","dummyArg","preState","concat","toConsumableArray","editPost","titleField","author","authorField","contentField","getTime","editPosts","deleteBlog","jsonResp","deletePost","expanded","expandable","style","textAlign","length","makeComment","key","icon","menuItems","primaryText","centered","onExpanderClick","subtitle","expander","margin","paddingLeft","paddingRight","menu","showComments","required","defaultValue","rows","rel","optionalBody","link","links","find","href","removeDomainFromUrl","Error","fetch","method","response","json","headers","Content-Type","body","JSON","stringify","url","indexOfPathBegin","i","substring","BlogPosts","sort","b","marginBottom","CardsTest_CardsTest","likeAction","onLikeActionBuilder","dislikeAction","onDislikeActionBuilder","singlePost","blogPostItem","dislikeLinkObject","linkObject","mode","likeLinkObject","NewBlogPost","newPost","updatePage","width","KebabMenu","logout","showNewBlogPost","NewBlogPost_NewBlogPost","App","result","loggedIn","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","posts","Symbol","iterator","next","done","post","err","return","array","index","findIndex","resourceJson","prevState","createPostLink","_this2","themed","KebabMenu_KebabMenu","Search_Search","BlogPosts_BlogPosts","LoggingDialogs_LoggingDialogs","Component","Boolean","window","location","hostname","match","WebFontLoader","load","google","families","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6625f70.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Button, DialogContainer, TextField } from 'react-md';\r\n\r\nexport default class LoggingDialogs extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.username = React.createRef();\r\n    this.password = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    visible: false\r\n  };\r\n\r\n  show = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  logIn = () => {\r\n      this.hide();\r\n      let result = true;\r\n      /* TODO: check loggin from backend\r\n      let obj = {\r\n        \"title\": this.titleField.current.value,\r\n        \"author\": this.authorField.current.value,\r\n        \"content\": this.contentField.current.value,\r\n        \"time\": new Date().getTime()\r\n      }\r\n      */\r\n       this.props.setLoginStatus(result)\r\n  }\r\n\r\n  render() {\r\n    const { visible } = this.state;\r\n\r\n    const actions = [];\r\n    actions.push(<Button flat secondary swapTheming onClick={this.hide}>Cancel</Button>);\r\n    actions.push(<Button flat primary swapTheming onClick={this.logIn}>Confirm</Button>);\r\n\r\n    return (\r\n      <div>\r\n        <Button flat secondary swapTheming onClick={this.show}>Sign In</Button>\r\n        <DialogContainer\r\n            id=\"simple-action-dialog\"\r\n            visible={visible}\r\n            onHide={this.hide}\r\n            actions={actions}\r\n            title=\"Sign In\"\r\n        >\r\n          <TextField\r\n              id=\"Username\"\r\n              placeholder=\"Username\"\r\n              ref={this.username}\r\n          />\r\n          <TextField\r\n              id=\"password\"\r\n              label=\"Enter your password\"\r\n              type=\"password\"\r\n              ref={this.password}\r\n          />\r\n        </DialogContainer>\r\n      </div>\r\n    );\r\n  }\r\n}","import {Autocomplete, FontIcon} from \"react-md\";\nimport React, {PureComponent} from \"react\";\n\nexport default class Search extends PureComponent {\n    render() {\n        let titles = this.props.data.map(item => (\n            item.title\n        ))\n\n        return (\n            <Autocomplete\n                id=\"floating-center-title\"\n                lineDirection=\"center\"\n                placeholder={\"Search\"}\n                leftIcon={<FontIcon>search</FontIcon>}\n                className=\"md-cell--12\"\n                data={titles}\n                filter={Autocomplete.caseInsensitiveFilter}\n                onAutocomplete={this.props.onAutocomplete}\n                onChange={this.props.onChange}\n            />\n        )\n    }\n}","import {\n    Card,\n    CardText,\n    CardTitle,\n    CardActions,\n    Button,\n    TextField,\n    IconSeparator,\n    MenuButton,\n    ListItem, DialogContainer\n} from \"react-md\";\nimport React, {PureComponent} from \"react\";\n\nexport default class CardsTest extends PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.textField = React.createRef();\n        this.titleField = React.createRef();\n        this.authorField = React.createRef();\n        this.contentField = React.createRef();\n\n        this.state = {\n            likes: 0,\n            disable: false,\n            expanded: false,\n            comments: [],\n            isLoading: false,\n            visible: false,\n            newComment: '',\n        }\n    }\n\n    show = () => {\n        this.setState({ visible: true });\n    };\n\n    hide = () => {\n        this.setState({visible: false,});\n    };\n\n    like = () => {\n        if(this.state.disable === false) {\n            this.doActionByRel('like');\n            this.setState((state) => {\n                return {likes: state.likes + 1, disable: true}\n            });\n        } else if (this.state.likes > 0) {\n            this.doActionByRel('dislike');\n            this.setState((state) => {\n                return {likes: state.likes - 1, disable: false}\n            });\n        }\n    }\n\n    postDate = () => {\n        let date = new Date(this.props.time);\n        let monthNames = [\n            \"January\", \"February\", \"March\",\n            \"April\", \"May\", \"June\", \"July\",\n            \"August\", \"September\", \"October\",\n            \"November\", \"December\"\n        ];\n\n        let day = date.getDate();\n        let monthIndex = date.getMonth();\n        let year = date.getFullYear();\n\n        return (\n            date.getHours() + \":\" + date.getMinutes() + \" - \" + day + ' ' + monthNames[monthIndex] + ' ' + year\n        )\n    }\n\n    getComments = () => {\n        this.setState({ isLoading: true });\n        this.doActionByRel('comments')\n            .then(data => this.setState({comments: data.content, isLoading: false}))\n    }\n\n    showComments() {\n        if(this.state.isLoading) {\n            return (\n                <CardText expandable style={{textAlign: 'left'}}>\n                    <p>Loading ...</p>\n                </CardText>\n            )\n        } else if(this.state.comments.length === 0 && this.state.isLoading === false) {\n            return (\n                <CardText expandable style={{textAlign: 'left'}}>\n                    <p>No comments</p>\n                    {this.makeComment()}\n                </CardText>\n            )\n        } else {\n            return (\n                <CardText expandable style={{textAlign: 'left'}}>\n                    {this.state.comments.map((item) => <p key={item.id}>{item.text}</p>)}\n                    {this.makeComment()}\n                </CardText>\n            )\n        }\n    }\n\n    makeComment() {\n        return(\n            <div>\n                <TextField id={'comment-field'} placeholder={\"New comment:\"} ref={this.textField}\n                           value={this.state.newComment} onChange={this.setComment}/>\n                <IconSeparator label={''}>\n                    <Button flat secondary swapTheming onClick={this.postComment}>Comment</Button>\n                </IconSeparator>\n            </div>\n        )\n    }\n\n    setComment = (value) => {\n        this.setState({newComment: value})\n    }\n\n    postComment = () => {\n        let obj = {\n            \"text\": this.textField.current.value,\n        };\n        this.doActionByRel('addComment', obj)\n            .then(dummyArg => this.setState(preState => ({\n                comments: [...preState.comments, dummyArg], newComment: ''\n            })));\n    }\n\n    editPost = () => {\n        this.hide()\n        let obj = {\n            \"id\": this.props.id,\n            \"title\": this.titleField.current.value,\n            \"author\": this.authorField.current.value,\n            \"content\": this.contentField.current.value,\n            \"time\": new Date().getTime()\n        };\n        this.doActionByRel('edit', obj)\n            .then(dummyArg => this.props.editPosts(dummyArg));\n    }\n\n    deleteBlog = () => {\n        this.doActionByRel('delete')\n            .then(jsonResp => {\n                this.props.deletePost(this.props.id)\n            });\n    }\n\n    menu() {\n        if (this.props.deletePost) {\n            return (\n                <MenuButton\n                    id={this.props.id + 'Menu'}\n                    icon\n                    swapTheming\n                    menuItems={[\n                        <ListItem key={1} primaryText=\"Modify\" onClick={this.show}/>,\n                        <ListItem key={2} primaryText=\"Delete\" onClick={this.deleteBlog}/>\n                    ]}\n                    centered\n                >\n                    more_vert\n                </MenuButton>\n            )\n        } else {\n            return null\n        }\n    }\n\n    render() {\n\n        const actions = [];\n        actions.push(<Button flat primary swapTheming onClick={this.hide}>Cancel</Button>);\n        actions.push(<Button flat secondary swapTheming onClick={this.editPost}>Edit</Button>);\n\n        return (\n            <div>\n                <Card onExpanderClick={this.getComments}>\n                    <CardTitle style={{textAlign: 'left'}} title={this.props.title} subtitle={\"By: \" + this.props.author + \" - \" + this.postDate()}/>\n                    <CardText style={{textAlign: 'left'}}>\n                        <p>{this.props.content}</p>\n                    </CardText>\n                    <CardActions expander>\n                        <p style={{margin: '0px', paddingLeft: '8px', paddingRight: '8px'}}>{this.props.likes + this.state.likes}</p>\n                        <Button icon secondary={this.state.disable} swapTheming onClick={this.like}>favorite</Button>\n                        {this.menu()}\n                    </CardActions>\n                    {this.showComments()}\n                </Card>\n                <DialogContainer\n                    id=\"new-blog-post\"\n                    visible={this.state.visible}\n                    onHide={this.hide}\n                    actions={actions}\n                    title=\"Edit Blog Post\"\n                >\n                    <TextField\n                        id=\"title\"\n                        label={\"Title of the post:\"}\n                        required={true}\n                        defaultValue={this.props.title}\n                        ref={this.titleField}\n                    />\n                    <TextField\n                        id=\"author\"\n                        label={\"Authors name:\"}\n                        required={true}\n                        defaultValue={this.props.author}\n                        ref={this.authorField}\n                    />\n                    <TextField\n                        id=\"content\"\n                        label=\"Content:\"\n                        rows={5}\n                        required={true}\n                        defaultValue={this.props.content}\n                        ref={this.contentField}\n                    />\n                </DialogContainer>\n            </div>\n        )\n    }\n\n    async doActionByRel(rel, optionalBody) {\n        let link = this.props.links.find((link) => link.rel === rel);\n        link.href = this.removeDomainFromUrl(link.href);\n\n        if (typeof link === 'undefined') {\n            throw new Error('Invalid argument provided: rel');\n        }\n\n        if (typeof optionalBody === 'undefined') {\n            const response = await fetch(link.href, {\n                method: link.type});\n            let json;\n            try {\n                json = await response.json();\n            } catch (e) {\n                json = [];\n            }\n\n            return json;\n        } else {\n            const response = await fetch(link.href, {\n                method: link.type,\n                headers: {\"Content-Type\": \"application/json\"},\n                body:JSON.stringify(optionalBody)\n            });\n            return await response.json();\n        }\n    }\n\n    removeDomainFromUrl(url) {\n        let indexOfPathBegin = 0;\n        let pathBeginString = '/api';\n\n        for (let i = 0; i < url.length - pathBeginString.length; i++) {\n            if (url.substring(i, i + pathBeginString.length) === pathBeginString) {\n                indexOfPathBegin = i;\n                break;\n            }\n        }\n\n        return url.substring(indexOfPathBegin);\n    }\n}","import React, { PureComponent } from \"react\";\n\nimport CardsTest from './common/CardsTest'\n\nexport default class BlogPosts extends PureComponent {\n\n    render() {\n        if(this.props.data) {\n            return (\n                this.props.data.concat().sort((a,b) => new Date(b.time) - new Date(a.time)).map((item) =>\n                    <div key={item.id} className=\"md-block-centered md-cell--10\" style={{marginBottom: '16px'}}>\n                        <CardsTest\n                            id={item.id}\n                            title={item.title}\n                            author={item.author}\n                            content={item.content}\n                            time={item.time}\n                            likes={item.likes}\n                            links={item.links}\n                            likeAction={this.onLikeActionBuilder(item)}\n                            dislikeAction={this.onDislikeActionBuilder(item)}\n                            deletePost={this.props.deletePost}\n                            editPosts={this.props.editPosts}\n                        />\n                    </div>\n                )\n            );\n        } else if (this.props.singlePost){\n            return (\n                <div key={this.props.singlePost.id} className=\"md-block-centered md-cell--10\">\n                    <CardsTest\n                        id={this.props.singlePost.id}\n                        title={this.props.singlePost.title}\n                        author={this.props.singlePost.author}\n                        content={this.props.singlePost.content}\n                        time={this.props.singlePost.time}\n                        likes={this.props.singlePost.likes}\n                        links={this.props.singlePost.links}\n                        likeAction={this.onLikeActionBuilder(this.props.singlePost)}\n                        dislikeAction={this.onDislikeActionBuilder(this.props.singlePost)}\n                        deletePost={this.props.deletePost}\n                        editPosts={this.props.editPosts}\n                    />\n                </div>\n            )\n        }\n    }\n\n    onDislikeActionBuilder(blogPostItem) {\n        let dislikeLinkObject = blogPostItem.links.find(\n            (linkObject) => linkObject.rel === 'dislike');\n        return () => {\n            fetch(dislikeLinkObject.href, {method:'post', mode:'no-cors'});\n        };\n\n    }\n\n    onLikeActionBuilder(blogPostItem) {\n        let likeLinkObject = blogPostItem.links.find(\n            (linkObject) => linkObject.rel === 'like');\n        return () => {\n            fetch(likeLinkObject.href, {method:'post', mode:'no-cors'});\n        };\n    }\n}","import {Button, DialogContainer, TextField} from \"react-md\";\r\nimport React, {PureComponent} from \"react\";\r\n\r\nexport default class NewBlogPost extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleField = React.createRef();\r\n        this.authorField = React.createRef();\r\n        this.contentField = React.createRef();\r\n    }\r\n\r\n    hide = () => {\r\n        this.props.hide()\r\n    }\r\n\r\n    newPost = () => {\r\n        if(this.titleField.current.value.length !== 0\r\n            && this.authorField.current.value.length !== 0\r\n            && this.contentField.current.value.length !== 0 ) {\r\n            this.hide()\r\n\r\n            let link = this.props.link\r\n            link.href = this.removeDomainFromUrl(link.href);\r\n\r\n            let obj = {\r\n                \"title\": this.titleField.current.value,\r\n                \"author\": this.authorField.current.value,\r\n                \"content\": this.contentField.current.value,\r\n                \"time\": new Date().getTime()\r\n            }\r\n\r\n            fetch(link.href, {\r\n                method: this.props.link.type,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(obj)\r\n            })\r\n                .then(response => response.json())\r\n                .then(json => this.props.updatePage(json));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const actions = [];\r\n        actions.push(<Button flat primary swapTheming onClick={this.hide}>Cancel</Button>);\r\n        actions.push(<Button flat secondary swapTheming onClick={this.newPost}>Send</Button>);\r\n\r\n        return (\r\n            <div>\r\n                <DialogContainer\r\n                    id=\"new-blog-post\"\r\n                    visible={this.props.show}\r\n                    onHide={this.hide}\r\n                    actions={actions}\r\n                    title=\"New Blog Post\"\r\n                    width={500}\r\n                >\r\n                    <TextField\r\n                        id=\"title\"\r\n                        label={\"Title of the post:\"}\r\n                        required={true}\r\n                        ref={this.titleField}\r\n                    />\r\n                    <TextField\r\n                        id=\"author\"\r\n                        label={\"Authors name:\"}\r\n                        required={true}\r\n                        ref={this.authorField}\r\n                    />\r\n                    <TextField\r\n                        id=\"content\"\r\n                        label=\"Content:\"\r\n                        rows={5}\r\n                        required={true}\r\n                        ref={this.contentField}\r\n                    />\r\n                </DialogContainer>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    removeDomainFromUrl(url) {\r\n        let indexOfPathBegin = 0;\r\n        let pathBeginString = '/api';\r\n\r\n        for (let i = 0; i < url.length - pathBeginString.length; i++) {\r\n            if (url.substring(i, i + pathBeginString.length) === pathBeginString) {\r\n                indexOfPathBegin = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return url.substring(indexOfPathBegin);\r\n    }\r\n}","import React, { PureComponent } from 'react';\nimport {MenuButton, ListItem} from 'react-md';\nimport NewBlogPost from \"./NewBlogPost\";\n\nexport default class KebabMenu extends PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: false,\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <MenuButton\n                    id={this.props.id}\n                    icon\n                    className={this.props.className}\n                    menuItems={[\n                        <ListItem key={'new-blog-post'} primaryText=\"New Post\" onClick={this.showNewBlogPost}/>,\n                        <ListItem key={'logout'} primaryText=\"Logout\" onClick={this.logout}/>,\n                    ]}\n                >\n                    more_vert\n                </MenuButton>\n                <NewBlogPost key={'new-blog-post'} link={this.props.link} updatePage={this.props.updatePage} show={this.state.show} hide={this.hide}/>\n            </div>\n        )\n    }\n\n    logout = () => {\n        this.props.setLoginStatus(false)\n    }\n\n    hide = () => {\n        this.setState({show: false})\n    }\n\n    showNewBlogPost = () => {\n        this.setState({show: true})\n    }\n}","import React, { Component } from 'react';\nimport {Toolbar} from 'react-md';\nimport './App.scss';\n\nimport LoggingDialogs from \"./common/LoggingDialogs\";\nimport Search from \"./common/Search\"\nimport BlogPosts from \"./BlogPosts\"\nimport KebabMenu from  \"./common/KebabMenu\"\nimport ApiRequestHandler from \"./ApiRequestHandler\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: null,\n            visible: false,\n            post: null,\n            createPostLink: null,\n            loggedIn: false,\n        };\n    }\n\n    show = () => {\n        this.setState({ visible: true });\n    };\n\n    hide = () => {\n        this.setState({visible: false,});\n    };\n\n    componentDidMount() {\n        fetch(\"/api/posts/\", {mode:\"no-cors\", method: \"GET\"})\n            .then(response => response.json())\n            .then(resourceJson => this.setState({\n                posts: resourceJson.content,\n            }));\n        fetch(\"/api/\", {mode:\"no-cors\", method:\"GET\"})\n            .then(response => response.json())\n            .then(resourceJson => this.setState({\n                createPostLink: resourceJson.links.find(\n                    (link) => link.rel === 'createPost')\n            }));\n    }\n\n    render() {\n        if(!this.state.posts) {\n            return(\n                <div className=\"App\">\n                    <Toolbar\n                        themed\n                        title=\"Blogging site\"\n                        actions={<LoggingDialogs setLoginStatus={this.setLoginStatus}/>}\n                    />\n                    <p>Loading ...</p>\n                </div>\n                )\n        } else if(this.state.visible) {\n            if(this.state.loggedIn) {\n                return (\n                    <div className=\"App\">\n                        <Toolbar\n                            themed\n                            title=\"Blogging site\"\n                            actions={<KebabMenu id=\"toolbar-kebab-menu\" setLoginStatus={this.setLoginStatus}\n                                                link={this.state.createPostLink} updatePage={this.updatePage}/>}\n                        />\n                        <div className=\"md-grid\">\n                            <Search data={this.state.posts} onAutocomplete={this.onAutocomplete}\n                                    onChange={this.onChange}/>\n                        </div>\n                        <div className=\"md-grid\">\n                            <BlogPosts singlePost={this.state.post} deletePost={this.deletePost}\n                                       editPosts={this.editPosts}/>\n                        </div>\n                    </div>\n                )\n            } else {\n                return (\n                    <div className=\"App\">\n                        <Toolbar\n                            themed\n                            title=\"Blogging site\"\n                            actions={<LoggingDialogs setLoginStatus={this.setLoginStatus}/>}\n                        />\n                        <div className=\"md-grid\">\n                            <Search data={this.state.posts} onAutocomplete={this.onAutocomplete}\n                                    onChange={this.onChange}/>\n                        </div>\n                        <div className=\"md-grid\">\n                            <BlogPosts singlePost={this.state.post}/>\n                        </div>\n                    </div>\n                )\n            }\n        } else if(this.state.loggedIn) {\n            return (\n                <div className=\"App\">\n                    <Toolbar\n                        themed\n                        title=\"Blogging site\"\n                        actions={<KebabMenu id=\"toolbar-kebab-menu\" setLoginStatus={this.setLoginStatus}\n                                            link={this.state.createPostLink} updatePage={this.updatePage}/>}\n                    />\n                    <div className=\"md-grid\">\n                        <Search data={this.state.posts} onAutocomplete={this.onAutocomplete} onChange={this.onChange}/>\n                    </div>\n                    <div className=\"md-grid\">\n                        <BlogPosts data={this.state.posts} deletePost={this.deletePost} editPosts={this.editPosts}/>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"App\">\n                    <Toolbar\n                        themed\n                        title=\"Blogging site\"\n                        actions={<LoggingDialogs setLoginStatus={this.setLoginStatus}/>}\n                    />\n                    <div className=\"md-grid\">\n                        <Search data={this.state.posts} onAutocomplete={this.onAutocomplete} onChange={this.onChange}/>\n                    </div>\n                    <div className=\"md-grid\">\n                        <BlogPosts data={this.state.posts}/>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    setLoginStatus = (result) => {\n        this.setState({loggedIn: result})\n    }\n\n    onAutocomplete = (result) => {\n        for(let item of this.state.posts) {\n            if(item.title === result) {\n                this.setState({\n                    post: item\n                })\n            }\n        }\n        this.show()\n    }\n\n    onChange = (item) => {\n        if(item === '') {\n            this.hide()\n        }\n    }\n\n    editPosts = (json) => {\n        let obj = this.state.post\n        if(this.state.post.id === json.id) {\n            obj = json\n        }\n\n        let array = [...this.state.posts]\n        let index = array.findIndex( item => item.id === json.id)\n        array[index] = json\n        this.setState( {posts: array, post: obj})\n    }\n\n    deletePost = (id) => {\n        let obj = this.state.post\n        if(this.state.post.id === id) {\n            obj = null\n            this.hide()\n        }\n        this.setState({posts: this.state.posts.filter(item => item.id !== id), post: obj})\n    }\n\n    updatePage = (json) => {\n        fetch(\"/api/posts/\"+json.id, {mode:\"no-cors\", method: \"GET\"})\n            .then(response => response.json())\n            .then(resourceJson => this.setState( prevState => ({\n                posts: [...prevState.posts, resourceJson]\n            })))\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport WebFontLoader from 'webfontloader';\r\nWebFontLoader.load({\r\n    google: {\r\n        families: ['Roboto:300,400,500,700', 'Material Icons'],\r\n    },\r\n});\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}